# Use postgres/example user/password credentials
version: '3.1'

services:
  admin:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    volumes:
      - media_volume:/usr/src/app/media/
      - static_volume:/usr/src/app/static/
    expose:
      - 8000
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=doc_bot
      - POSTGRES_USER=doc_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=the-most-secret
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data_doc_bot:/var/lib/postgresql/data/
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=doc_bot
      - POSTGRES_USER=doc_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"

  bot:
    build:
      context: ..
      dockerfile: ./deploy/app.Dockerfile
    command: python manage.py bot_polling
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=doc_bot
      - POSTGRES_USER=doc_bot
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - BOT_TOKEN=5322135399:AAEq3Ge1rQ8PjrOviW66yCrfe_0uOH7owHc


volumes:
  postgres_data_doc_bot:
  media_volume:
  static_volume: